# The external ip of the server.
# When using a dual stack setup define both IPv4 & IPv6 separated by a comma.
# Execute the following command on the server you want to host Screego
# to find your external ip.
#   curl 'https://api.ipify.org'
# Example:
#   192.168.178.2,2a01:c22:a87c:e500:2d8:61ff:fec7:f92a
SCREEGO_EXTERNAL_IP=

# A secret which should be unique. Is used for cookie authentication.
SCREEGO_SECRET=

# If TLS should be enabled for HTTP requests. Screego requires TLS,
# you either have to enable this setting or serve TLS via a reverse proxy.
SCREEGO_SERVER_TLS=false
# The TLS cert file (only needed if TLS is enabled)
SCREEGO_TLS_CERT_FILE=
# The TLS key file (only needed if TLS is enabled)
SCREEGO_TLS_KEY_FILE=

# The address the http server will listen on.
SCREEGO_SERVER_ADDRESS=0.0.0.0:5050

# The address the TURN server will listen on.
SCREEGO_TURN_ADDRESS=0.0.0.0:3478

# Limit the ports that TURN will use for data relaying.
# Format: min:max
# Example:
#   50000:55000
SCREEGO_TURN_PORT_RANGE=

# If true, the TURN server will compare the remote IP of the request with the
# remote ip of the existing WebSocket connection and deny access if it doesn't
# match. Disable this feature, if you use some kind of proxy which changes the
# remote ip.
SCREEGO_TURN_STRICT_AUTH=true

# If set, screego will not start TURN server and instead use an external TURN server.
# When using a dual stack setup define both IPv4 & IPv6 separated by a comma.
# Execute the following command on the server where you host TURN server
# to find your external ip.
#   curl 'https://api.ipify.org'
# Example:
#   192.168.178.2,2a01:c22:a87c:e500:2d8:61ff:fec7:f92a
SCREEGO_TURN_EXTERNAL_IP=

# The port the external TURN server listens on.
SCREEGO_TURN_EXTERNAL_PORT=3478

# Authentication secret for the external TURN server.
SCREEGO_TURN_EXTERNAL_SECRET=

# If reverse proxy headers should be trusted.
# Screego uses ip whitelisting for authentication
# of TURN connections. When behind a proxy the ip is always the proxy server.
# To still allow whitelisting this setting must be enabled and
# the `X-Real-Ip` header must be set by the reverse proxy.
SCREEGO_TRUST_PROXY_HEADERS=false

# Defines when a user login is required
# Possible values:
#   all: User login is always required
#   turn: User login is required for TURN connections
#   none: User login is never required
SCREEGO_AUTH_MODE=turn

# Defines origins that will be allowed to access Screego (HTTP + WebSocket)
# The default value is sufficient for most use-cases.
# Example Value: https://screego.net,https://sub.gotify.net
SCREEGO_CORS_ALLOWED_ORIGINS=

# Defines the location of the users file.
# File Format:
#   user1:bcrypt_password_hash
#   user2:bcrypt_password_hash
#
# Example:
#   user1:$2a$12$WEfYCnWGk0PDzbATLTNiTuoZ7e/43v6DM/h7arOnPU6qEtFG.kZQy
#
# The user password pair can be created via
#   screego hash --name "user1" --pass "your password"
SCREEGO_USERS_FILE=

# Defines the default value for the checkbox in the room creation dialog to select
# if the room should be closed when the room owner leaves
SCREEGO_CLOSE_ROOM_WHEN_OWNER_LEAVES=true

# The loglevel (one of: debug, info, warn, error)
SCREEGO_LOG_LEVEL=info

# If screego should expose a prometheus endpoint at /metrics. The endpoint
# requires basic authentication from a user in the users file.
SCREEGO_PROMETHEUS=false

###############################################################################
#                      OAuth2 and Open ID Connect Config                      #
###############################################################################

# Defines witch user login methods are possible
# Possible values:
#   all: OAuth and Basic auth are available
#   oauth: only OAuth is a possible login method
#   basic: only Basic auth with the user file is allowed and all following OAuth config will be ignored
#   none: User login is never possible
SCREEGO_LOGIN_MODE=basic

# Google Open ID Connect Provider example
# Register a OAuth project by Google https://console.developers.google.com/
#SCREEGO_USE_OPEN_ID=true
#SCREEGO_OPEN_ID_PROVIDER_URL=https://accounts.google.com # The Provider URL is the URL with a well-known entry for Open ID. This is added to the URL (do not write it) /.well-known/openid-configuration
#SCREEGO_O_AUTH_CLIENT_ID=<client-id>
#SCREEGO_O_AUTH_CLIENT_SECRET=<client-secret>
#SCREEGO_O_AUTH_REDIRECT_URL=https://<domain.td>/oauth # The Redirect URL is the URL to witch the OAuth provider is giving back the user data. e.g. http://domain.td/oauth (it has to and on /oauth)

# Github example with OAuth2 login
# Register a OAuth App by Github https://github.com/settings/applications/new
#SCREEGO_USE_OPEN_ID=false # Github dose not speak OpenID Connect
#SCREEGO_O_AUTH_CLIENT_ID=<client-id>
#SCREEGO_O_AUTH_CLIENT_SECRET=<client-secret>
#SCREEGO_O_AUTH_AUTHORIZE_URL=https://github.com/login/oauth/authorize # The Auth and Token URLs for GitHub: https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps
#SCREEGO_O_AUTH_TOKEN_URL=https://github.com/login/oauth/access_token
#SCREEGO_USER_API_URL=https://api.github.com/user # The API is required. GET request with a header "Authorization: token OAUTH-ACCESS-TOKEN" and as a response is json with a name and email value expected
#SCREEGO_O_AUTH_REDIRECT_URL=https://domain.td/oauth # The Redirect URL is the URL to witch the OAuth provider is giving back the user data. e.g. http://domain.td/oauth (it has to and on /oauth)

# Keycloak example with OpenID Connect
#SCREEGO_USE_OPEN_ID=true
#SCREEGO_O_AUTH_CLIENT_ID=<client-id>
#SCREEGO_O_AUTH_CLIENT_SECRET=<client-secret>
#SCREEGO_O_AUTH_REDIRECT_URL=https://<domain.td>/oauth
#SCREEGO_OPEN_ID_PROVIDER_URL=https://keycloak.<domain.td>/auth/realms/master # Keycloak has a Provider URL for each realm

#OAuth requirements
SCREEGO_O_AUTH_CLIENT_ID=<client-id> # You can get it from your OAuth Provider
SCREEGO_O_AUTH_CLIENT_SECRET=<client-secret> # You can get it from your OAuth Provider (will never be exposed)
SCREEGO_O_AUTH_REDIRECT_URL=https://<domain.td>/oauth # Just replace <domain.td> with your domain

# Open ID Connect
SCREEGO_USE_OPEN_ID=true # Use OpenID Connect
SCREEGO_OPEN_ID_PROVIDER_URL=<provider-url> # e.g. https://accounts.google.com
# or
# OAuth2 only
SCREEGO_USE_OPEN_ID=false # Only use OAuth2
SCREEGO_O_AUTH_AUTHORIZE_URL=<auth-url> # e.g. https://github.com/login/oauth/authorize
SCREEGO_O_AUTH_TOKEN_URL=<auth-url> # e.g. https://github.com/login/oauth/access_token
SCREEGO_USER_API_URL=<auth-url> # e.g. https://api.github.com/user

#Optional OAuth options
# If set, access to screego is limited to user with emails that are on this list.
# Multiple email addresses can be separated by a comma.
# A hole domain can be added with a * at the beginning of the address.
# Example:
#   <user>@<domain.td>,<user>@gmail.com,*@<domain.td>
SCREEGO_EMAIL_WHITELIST=